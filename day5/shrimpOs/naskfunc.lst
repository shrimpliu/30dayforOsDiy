     1 00000000                                 ; naskfunc
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [FORMAT "WCOFF"] 			; 制作目标文件的模式
     5 00000000                                 [INSTRSET "i486p"]	
     6 00000000                                 [BITS 32] 					; 制作32位模式用的机器语言
     7 00000000                                 
     8 00000000                                 ; 制作目标文件的信息
     9 00000000                                 
    10 00000000                                 [FILE "naskfunc.nas"] 		; 源文件名信息
    11 00000000                                 		
    12 00000000                                 		GLOBAL 	_io_hlt,_io_cli,_io_sti,_io_stihlt 	; 程序中包含的函数名
    13 00000000                                 		GLOBAL	_io_in8,  _io_in16,  _io_in32
    14 00000000                                 		GLOBAL	_io_out8, _io_out16, _io_out32
    15 00000000                                 		GLOBAL	_io_load_eflags, _io_store_eflags
    16 00000000                                 		GLOBAL	_load_gdtr, _load_idtr
    17 00000000                                 ; 以下为实际的函数
    18 00000000                                 
    19                                          [SECTION .text] 			; 目标文件中写了这些之后再写程序
    20 00000000                                 
    21 00000000                                 _io_hlt: 					; void io_hlt(void);
    22 00000000 F4                              		HLT
    23 00000001 C3                              		RET
    24 00000002                                 		
    25 00000002                                 _io_cli:
    26 00000002 FA                              		CLI
    27 00000003 C3                              		RET
    28 00000004                                 		
    29 00000004                                 _io_sti:
    30 00000004 FB                              		STI
    31 00000005 C3                              		RET
    32 00000006                                 		
    33 00000006                                 _io_stihlt:
    34 00000006 FB                              		STI
    35 00000007 F4                              		HLT
    36 00000008 C3                              		RET
    37 00000009                                 		
    38 00000009                                 _io_in8:	; int io_in8(int port);
    39 00000009 8B 54 24 04                     		MOV		EDX,[ESP+4]		; port
    40 0000000D B8 00000000                     		MOV		EAX,0
    41 00000012 EC                              		IN		AL,DX
    42 00000013 C3                              		RET
    43 00000014                                 
    44 00000014                                 _io_in16:	; int io_in16(int port);
    45 00000014 8B 54 24 04                     		MOV		EDX,[ESP+4]		; port
    46 00000018 B8 00000000                     		MOV		EAX,0
    47 0000001D 66 ED                           		IN		AX,DX
    48 0000001F C3                              		RET
    49 00000020                                 
    50 00000020                                 _io_in32:	; int io_in32(int port);
    51 00000020 8B 54 24 04                     		MOV		EDX,[ESP+4]		; port
    52 00000024 ED                              		IN		EAX,DX
    53 00000025 C3                              		RET
    54 00000026                                 
    55 00000026                                 _io_out8:	; void io_out8(int port, int data);
    56 00000026 8B 54 24 04                     		MOV		EDX,[ESP+4]		; port
    57 0000002A 8A 44 24 08                     		MOV		AL,[ESP+8]		; data
    58 0000002E EE                              		OUT		DX,AL
    59 0000002F C3                              		RET
    60 00000030                                 
    61 00000030                                 _io_out16:	; void io_out16(int port, int data);
    62 00000030 8B 54 24 04                     		MOV		EDX,[ESP+4]		; port
    63 00000034 8B 44 24 08                     		MOV		EAX,[ESP+8]		; data
    64 00000038 66 EF                           		OUT		DX,AX
    65 0000003A C3                              		RET
    66 0000003B                                 
    67 0000003B                                 _io_out32:	; void io_out32(int port, int data);
    68 0000003B 8B 54 24 04                     		MOV		EDX,[ESP+4]		; port
    69 0000003F 8B 44 24 08                     		MOV		EAX,[ESP+8]		; data
    70 00000043 EF                              		OUT		DX,EAX
    71 00000044 C3                              		RET
    72 00000045                                 
    73 00000045                                 _io_load_eflags:	; int io_load_eflags(void);
    74 00000045 9C                              		PUSHFD		; 指PUSH EFLAGS
    75 00000046 58                              		POP		EAX
    76 00000047 C3                              		RET
    77 00000048                                 
    78 00000048                                 _io_store_eflags:	; void io_store_eflags(int eflags);
    79 00000048 8B 44 24 04                     		MOV		EAX,[ESP+4]
    80 0000004C 50                              		PUSH	EAX
    81 0000004D 9D                              		POPFD		; 指POP EFLAGS
    82 0000004E C3                              		RET
    83 0000004F                                 		
    84 0000004F                                 _load_gdtr:		; void load_gdtr(int limit, int addr);
    85 0000004F 66 8B 44 24 04                  		MOV		AX,[ESP+4]		; limit
    86 00000054 66 89 44 24 06                  		MOV		[ESP+6],AX
    87 00000059 0F 01 54 24 06                  		LGDT	[ESP+6]
    88 0000005E C3                              		RET
    89 0000005F                                 
    90 0000005F                                 _load_idtr:		; void load_idtr(int limit, int addr);
    91 0000005F 66 8B 44 24 04                  		MOV		AX,[ESP+4]		; limit
    92 00000064 66 89 44 24 06                  		MOV		[ESP+6],AX
    93 00000069 0F 01 5C 24 06                  		LIDT	[ESP+6]
    94 0000006E C3                              		RET
